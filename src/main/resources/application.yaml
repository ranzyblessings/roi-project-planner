spring:
  application:
    name: roi-project-planner

  cassandra:
    schema-action: create_if_not_exists
    keyspace-name: roi_project_planner
    contact-points: localhost:9042
    local-datacenter: dc1
    consistency-level: ONE

  data:
    redis:
      host: localhost
      port: 6379

  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
          autoCreateTopics: false
          replicationFactor: 1
        bindings:
          capital-maximization-query-in-0:
            consumer:
              enable-dlq: true
              dlq-name: capital-maximization-query-events-dlq
      bindings:
        capital-maximization-query-out-0:
          destination: capital-maximization-query-events
          producer:
            partitionKeyExpression: headers.PARTITION_KEY
            partitionCount: 2
        capital-maximization-query-in-0:
          destination: capital-maximization-query-events
          group: capital-maximization-query
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 500
            backOffMaxInterval: 1000
            backOffMultiplier: 2.0
            partitioned: true

management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - prometheus
          - metrics
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  tracing:
    sampling:
      probability: 1.0
    exporter:
      zipkin:
        endpoint: http://localhost:9411/api/v2/spans # Exports trace data to Jaeger via Zipkin API.

logging:
  file:
    path: logs
    name: application.log
  level:
    org.springframework.data.cassandra: DEBUG
    org.springframework.kafka: INFO
    org.springframework.web: DEBUG