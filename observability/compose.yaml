services:

  loki:
    image: 'grafana/loki:3.1.2'
    container_name: 'loki'
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - observability-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:3100/metrics" ]
      interval: 30s
      retries: 3
      timeout: 10s
      start_period: 5s

  alloy:
    image: 'grafana/alloy:v1.6.1'
    container_name: 'alloy'
    volumes:
      - ./config.alloy:/etc/alloy/config.alloy
      - ../logs/application.log:/var/log/application.log
    networks:
      - observability-network
    restart: unless-stopped
    depends_on:
      loki:
        condition: service_healthy

  prometheus:
    image: 'prom/prometheus:v3.1.0'
    container_name: 'prometheus'
    ports:
      - '9090:9090'
    volumes:
      - ./prom-config.yaml:/etc/prometheus/prometheus.yml
    networks:
      - observability-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:9090/metrics" ]
      interval: 30s
      retries: 3
      timeout: 10s
      start_period: 5s

  grafana:
    image: 'grafana/grafana:11.5.1'
    container_name: 'grafana'
    ports:
      - '3000:3000'
    networks:
      - observability-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/api/health" ]
      interval: 30s
      retries: 3
      timeout: 10s
      start_period: 5s

  jaeger:
    image: 'jaegertracing/jaeger:2.3.0'
    container_name: 'jaeger'
    ports:
      - '4317:4317'   # OTLP gRPC
      - '4318:4318'   # OTLP HTTP
      - '5778:5778'   # Configuration UI
      - '9411:9411'   # Zipkin API
      - '16686:16686' # Jaeger UI
    networks:
      - observability-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:16686" ]
      interval: 30s
      retries: 3
      timeout: 10s
      start_period: 5s

networks:
  observability-network: